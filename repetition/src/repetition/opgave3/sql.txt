Tabelnavn: Person
 - Kolonner: id (bigint, autogenereret, fortløbende, startende med 1), 
 name (varchar, max længde 80, skal altid udfyldes), 
 email (varchar, max længde 255), 
 birthdate (dato, skal udfyldes)
 - Læg data i tabellen, svarende til den Liste, du lavede i opgave1.
 
 Lav Create-statement til en SQL-tabel:
 - Tabelnavn: Employment
 - Kolonner: id (som ovenfor), company (varchar, max 50, skal udfyldes), employmentdate (dato, skal udfyldes) person (fremmednøgle til person, skal udfyldes)
 - Læg data i tabellen, så alle dine personer pånær en eller to findes i Employment, og så mindst to er ansat i samme Company
 
 
 
 
CREATE TABLE Person (
id bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1) UNIQUE ,
name varchar(80) NOT NULL,
email varchar(255) UNIQUE,
birthday date NOT NULL

);

INSERT INTO "PUBLIC"."PERSON"
( "NAME", "EMAIL", "BIRTHDAY" )
VALUES ( 'Juyoung', 'juy@me.com', '1982-01-17' );

INSERT INTO "PUBLIC"."PERSON"
( "NAME", "EMAIL", "BIRTHDAY" )
VALUES ( 'Jesper', 'jesp@me.com', '1974-07-18' );

INSERT INTO "PUBLIC"."PERSON"
( "NAME", "EMAIL", "BIRTHDAY" )
VALUES ( 'Mina', 'mina@me.com', '2010-02-17' );

INSERT INTO "PUBLIC"."PERSON"
( "NAME", "EMAIL", "BIRTHDAY" )
VALUES ( 'Kim', 'kim@me.com', '2000-12-17' );

INSERT INTO "PUBLIC"."PERSON"
( "NAME", "EMAIL", "BIRTHDAY" )
VALUES ( 'Park', 'park@me.com', '1990-02-22' );


CREATE TABLE Employment (
id bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1) UNIQUE ,
company varchar(50) NOT NULL,
employment date NOT NULL,
person bigint NOT NULL,
foreign key (person) references person(id) on delete cascade

);

INSERT INTO "PUBLIC"."EMPLOYMENT"
( "COMPANY", "EMPLOYMENT", "PERSON" )
VALUES ( 'Apple', '2000-01-01' , 1 );

INSERT INTO "PUBLIC"."EMPLOYMENT"
( "COMPANY", "EMPLOYMENT", "PERSON" )
VALUES ( 'Apple', '1998-01-01' , 2 );


INSERT INTO "PUBLIC"."EMPLOYMENT"
( "COMPANY", "EMPLOYMENT", "PERSON" )
VALUES ( 'Google', '2013-01-01' , 3 );

INSERT INTO "PUBLIC"."EMPLOYMENT"
( "COMPANY", "EMPLOYMENT", "PERSON" )
VALUES ( 'Google', '2003-01-01' , 4 );



INSERT INTO "PUBLIC"."EMPLOYMENT"
( "COMPANY", "EMPLOYMENT", "PERSON" )
VALUES ( 'Google', '2000-01-01' , 5 );



SELECT * FROM "PUBLIC"."PERSON" ORDER BY birthday DESC

SELECT * FROM "PUBLIC"."EMPLOYMENT" ORDER BY employment ASC

SELECT name, DATEDIFF('yy',birthday, curdate()) as age
FROM "PUBLIC"."EMPLOYMENT" inner join person on  person = person.id
where company ='Apple'

SELECT company, COUNT(person)  as employee FROM "PUBLIC"."EMPLOYMENT" GROUP BY company

